@using WebApplication1.Models
@model List<SeatAvailabilityResponse>
@{
    ViewData["Title"] = "Chọn chỗ ngồi";
    var groupedByCarriage = Model.GroupBy(s => s.CarriageNumber).OrderBy(g => g.Key);
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>

    <style>
        body {
            font-family: sans-serif;
            background: #fdf0f5;
            margin: 0;
            padding: 20px;
        }

        .container {
            max-width: 800px;
            margin: auto;
            background: #fff;
            padding: 16px;
            border-radius: 12px;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }

        .title {
            font-size: 20px;
            font-weight: bold;
            margin-bottom: 12px;
        }

        .legend {
            display: flex;
            gap: 10px;
            font-size: 14px;
            margin-bottom: 10px;
        }

            .legend span {
                display: flex;
                align-items: center;
                gap: 4px;
            }

        .seat {
            width: 50px;
            height: 50px;
            margin: 4px;
            border-radius: 8px;
            text-align: center;
            line-height: 1.2;
            font-size: 12px;
            cursor: pointer;
            display: flex;
            flex-direction: column;
            justify-content: center;
            user-select: none;
        }

            .seat.available {
                background-color: #f0f0f0;
            }

            .seat.sold {
                background-color: #ccc;
                cursor: not-allowed;
            }

            .seat.selected {
                background-color: #e83e8c;
                color: white;
            }

        .seat-grid {
            display: grid;
            grid-template-columns: repeat(4, 1fr);
            justify-items: center;
        }

        .tab-bar {
            display: flex;
            gap: 8px;
            margin-bottom: 10px;
        }

        .tab-button {
            padding: 6px 12px;
            border: none;
            border-radius: 6px;
            background-color: #eee;
            cursor: pointer;
        }

            .tab-button.active {
                background-color: #e83e8c;
                color: white;
            }

        .carriage-tab {
            display: none;
        }

        .bottom {
            margin-top: 20px;
            font-size: 16px;
        }

        .btn {
            background: #e83e8c;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 8px;
            font-size: 16px;
            margin-top: 10px;
            cursor: pointer;
        }

            .btn:disabled {
                background: #ccc;
                cursor: default;
            }
    </style>
</head>
<body>
    <div class="container">
        <div class="legend">
            <span><div class="seat available"></div> Trống</span>
            <span><div class="seat sold"></div> Đã bán</span>
            <span><div class="seat selected"></div> Đang chọn</span>
        </div>

        <!-- Tabs -->
        <div class="tab-bar">
            @foreach (var group in groupedByCarriage)
            {
                <button class="tab-button" data-carriage="@group.Key">Toa @group.Key</button>
            }
        </div>

        <!-- Ghế theo từng toa -->
        @foreach (var group in groupedByCarriage)
        {
            <div class="carriage-tab" id="carriage-@group.Key">
                <div class="title">Toa @group.Key</div>
                <div class="seat-grid">
                    @foreach (var seat in group.OrderBy(s => s.SeatNumber))
                    {
                        var cssClass = seat.IsAvailable ? "seat available" : "seat sold";
                        var label = seat.IsAvailable ? $"{seat.SeatNumber}<br>{seat.Price:N0}đ" : "X";
                        <div class="@cssClass"
                             data-seat-id="@seat.SeatId"
                             data-price="@seat.Price"
                             data-title="@seat.SeatType">
                            @Html.Raw(label)
                        </div>
                    }
                </div>
            </div>
        }

        <div class="bottom">
            Tổng tiền: <strong id="total">0đ</strong><br />
            <button class="btn" id="continueBtn" disabled>Tiếp tục</button>
        </div>
    </div>

    <script>
        const tabs = document.querySelectorAll(".tab-button");
        const tabContents = document.querySelectorAll(".carriage-tab");

        function showTab(carriageNumber) {
            tabContents.forEach(tab => {
                tab.style.display = tab.id === `carriage-${carriageNumber}` ? "block" : "none";
            });

            tabs.forEach(btn => {
                btn.classList.toggle("active", btn.dataset.carriage == carriageNumber);
            });
        }

        tabs.forEach(btn => {
            btn.addEventListener("click", () => {
                showTab(btn.dataset.carriage);
            });
        });

        // Show tab đầu tiên mặc định
        if (tabs.length > 0) {
            showTab(tabs[0].dataset.carriage);
        }

        // Xử lý chọn ghế
        let selectedSeats = [];

        document.addEventListener("click", function (e) {
            const seat = e.target.closest('.seat.available');
            if (!seat) return;

            const seatId = seat.dataset.seatId;
            const price = parseInt(seat.dataset.price || "0");

            if (seat.classList.contains("selected")) {
                seat.classList.remove("selected");
                selectedSeats = selectedSeats.filter(s => s.id !== seatId);
            } else {
                seat.classList.add("selected");
                selectedSeats.push({ id: seatId, price });
            }

            updateTotal();
        });

        function updateTotal() {
            const total = selectedSeats.reduce((sum, seat) => sum + seat.price, 0);
            document.getElementById("total").textContent = total.toLocaleString('vi-VN') + 'đ';
            document.getElementById("continueBtn").disabled = selectedSeats.length === 0;
        }
    </script>
</body>
</html>
